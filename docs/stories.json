{
  "paths": {
    "/stories": {
      "get": {
        "tags": ["Stories"],
        "summary": "Get a list of stories",
        "parameters": [
          {
            "name": "epic_id",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "./atoms/epicId.json#/components/schemas/EpicId",
              "description": "The ID of the epic to filter by"
            }
          },
          {"$ref": "./generic/genericListRequest.json#/components/schemas/GenericListRequest/properties/limit"},
          {"$ref": "./generic/genericListRequest.json#/components/schemas/GenericListRequest/properties/offset"},
          {"$ref": "./generic/genericSortRequest.json#/components/schemas/GenericSortRequest/properties/sort"},
          {"$ref": "./generic/genericSortRequest.json#/components/schemas/GenericSortRequest/properties/direction"}
        ],
        "responses": {
          "200": {
            "description": "A list of stories successfully returned",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The list of stories",
                  "properties": {
                    "$ref": "./generic/genericResponse.json#/components/schemas/GenericResponse/properties",
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "./entities/story.json#/components/schemas/Story",
                        "description": "The story details"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Stories"
        ],
        "summary": "Create a new story",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the story"
                  },
                  "description": {
                    "type": "string",
                    "description": "The story description"
                  },
                  "epic_id": {
                    "$ref": "./atoms/epicId.json#/components/schemas/EpicId",
                    "description": "The ID of the epic the story belongs to"
                  }
                },
                "required": [
                  "title"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Story created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "./generic/genericResponse.json#/components/schemas/GenericResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "$ref": "./entities/story.json#/components/schemas/Story/properties"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./generic/genericResponse.json#/components/schemas/GenericResponse"
                }
              }
            }
          }
        }
      }
    },
    "/stories/{id}": {
      "get": {
        "tags": [
          "Stories"
        ],
        "summary": "Get an story by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "./atoms/storyId.json#/components/schemas/StoryId",
              "description": "The ID of the story"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Story details",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "./generic/genericResponse.json#/components/schemas/GenericResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "$ref": "./entities/story.json#/components/schemas/Story/properties"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "story not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./generic/genericResponse.json#/components/schemas/GenericResponse/properties"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Stories"
        ],
        "summary": "Delete story by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "./atoms/storyId.json#/components/schemas/StoryId",
              "description": "The ID of the story"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Story deleted",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "./generic/genericResponse.json#/components/schemas/GenericResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "story not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./generic/genericResponse.json#/components/schemas/GenericResponse/properties"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Stories"
        ],
        "summary": "Update story",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "./atoms/storyId.json#/components/schemas/StoryId",
              "description": "The ID of the story"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the story"
                  },
                  "description": {
                    "type": "string",
                    "description": "The story description"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Story updated",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "./generic/genericResponse.json#/components/schemas/GenericResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "$ref": "./entities/story.json#/components/schemas/Story/properties"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./generic/genericResponse.json#/components/schemas/GenericResponse"
                }
              }
            }
          }
        }
      }
    }
  }
}
