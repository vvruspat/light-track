{
  "paths": {
    "/tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get a list of tasks",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "./atoms/projectId.json#/components/schemas/ProjectId",
              "description": "The ID of the project to filter by"
            }
          },
          {
            "name": "storyId",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "./atoms/storyId.json#/components/schemas/StoryId",
              "description": "The ID of the story to filter by"
            }
          },
          {
            "name": "epicId",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "./atoms/epicId.json#/components/schemas/EpicId",
              "description": "The ID of the epic to filter by"
            }
          },
          {
            "name": "assigneeId",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "./atoms/userId.json#/components/schemas/UserId",
              "description": "The ID of the user the task is assigned to"
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "./atoms/userId.json#/components/schemas/UserId",
              "description": "The ID of the user who owns the task"
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "./atoms/groupId.json#/components/schemas/GroupId",
              "description": "The ID of the group which the task belongs to"
            }
          },
          {"$ref": "./generic/genericListRequest.json#/components/schemas/GenericListRequest/properties/limit"},
          {"$ref": "./generic/genericListRequest.json#/components/schemas/GenericListRequest/properties/offset"},
          {"$ref": "./generic/genericSortRequest.json#/components/schemas/GenericSortRequest/properties/sort"},
          {"$ref": "./generic/genericSortRequest.json#/components/schemas/GenericSortRequest/properties/direction"}
        ],
        "responses": {
          "200": {
            "description": "A list of tasks",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The list of tasks",
                  "properties": {
                    "$ref": "./generic/genericResponse.json#/components/schemas/GenericResponse/properties",
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "./entities/task.json#/components/schemas/Task",
                        "description": "The task details"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Create a new task",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the task"
                  },
                  "description": {
                    "type": "string",
                    "description": "The task description"
                  },
                  "projectId": {
                    "$ref": "./atoms/projectId.json#/components/schemas/ProjectId",
                    "description": "The project ID the task belongs to"
                  },
                  "storyId": {
                    "$ref": "./atoms/storyId.json#/components/schemas/StoryId",
                    "description": "The story ID the task belongs to"
                  },
                  "epicId": {
                    "$ref": "./atoms/epicId.json#/components/schemas/EpicId",
                    "description": "The epic ID the task belongs to"
                  },
                  "assigneeId": {
                    "$ref": "./atoms/userId.json#/components/schemas/UserId",
                    "description": "The user ID the task is assigned to"
                  },
                  "estimation": {
                    "type": "number",
                    "description": "The estimated effort for the task"
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the task"
                  }
                },
                "required": [
                  "title",
                  "projectId",
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "./generic/genericResponse.json#/components/schemas/GenericResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "$ref": "./entities/task.json#/components/schemas/Task/properties"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tasks"
        ],
        "summary": "Update task by ID",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "./atoms/taskId.json#/components/schemas/TaskId",
                    "description": "The task ID"
                  },
                  "title": {
                    "type": "string",
                    "description": "The title of the task"
                  },
                  "description": {
                    "type": "string",
                    "description": "The task description"
                  },
                  "assigneeId": {
                    "$ref": "./atoms/userId.json#/components/schemas/UserId",
                    "description": "The user ID the task is assigned to"
                  },
                  "estimation": {
                    "type": "number",
                    "description": "The estimated effort for the task"
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the task"
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "./generic/genericResponse.json#/components/schemas/GenericResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "$ref": "./entities/task.json#/components/schemas/Task/properties"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get a task by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "./atoms/taskId.json#/components/schemas/TaskId",
              "description": "The task ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task details",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "./generic/genericResponse.json#/components/schemas/GenericResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "$ref": "./entities/task.json#/components/schemas/Task/properties"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./generic/genericResponse.json#/components/schemas/GenericResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Delete a task by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "./atoms/taskId.json#/components/schemas/TaskId",
              "description": "The task ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./generic/genericResponse.json#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./generic/genericResponse.json#/components/schemas/GenericResponse"
                }
              }
            }
          }
        }
      }
    }
  }
}
