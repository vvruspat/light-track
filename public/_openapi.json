{
  "openapi": "3.0.1",
  "info": {
    "title": "LightTrack API",
    "description": "API for the LightTrack task-tracking system.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api"
    }
  ],
  "tags": [
    {
      "name": "Projects",
      "description": "API related to projects"
    },
    {
      "name": "Epics",
      "description": "API related to tasks"
    },
    {
      "name": "Stories",
      "description": "API related to tasks"
    },
    {
      "name": "Tasks",
      "description": "API related to tasks"
    }
  ],
  "paths": {
    "/projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get a list of projects",
        "parameters": [
          {
            "name": "groupId",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/paths/~1epics/get/parameters/2/schema",
              "description": "The ID of the group to filter by"
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/paths/~1epics/get/parameters/1/schema",
              "description": "The ID of the user who owns the project"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/paths/~1projects/post/responses/201/content/application~1json/schema",
                    "description": "The project details"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Create a new project",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the project"
                  },
                  "description": {
                    "type": "string",
                    "description": "The project description"
                  },
                  "groupId": {
                    "$ref": "#/paths/~1epics/get/parameters/2/schema",
                    "description": "The ID of the group the project belongs to"
                  }
                },
                "required": [
                  "title",
                  "groupId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The project details",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/paths/~1epics/get/parameters/0/schema",
                      "description": "The unique identifier for the project"
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the project"
                    },
                    "description": {
                      "type": "string",
                      "description": "The project description"
                    },
                    "ownerId": {
                      "$ref": "#/paths/~1epics/get/parameters/1/schema",
                      "description": "The ID of the project owner"
                    },
                    "groupId": {
                      "$ref": "#/paths/~1epics/get/parameters/2/schema",
                      "description": "The ID of the group the project belongs to"
                    }
                  },
                  "required": [
                    "title",
                    "groupId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/projects/{id}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get a project by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/paths/~1epics/get/parameters/0/schema",
              "description": "The ID of the project"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1projects/post/responses/201/content/application~1json/schema",
                  "description": "The project details"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Project not found"
          }
        }
      }
    },
    "/epics": {
      "get": {
        "tags": [
          "Epics"
        ],
        "summary": "Get a list of epics",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the project to filter by",
              "type": "number"
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the user who owns the epic",
              "type": "number"
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the group which the epic belongs to",
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of epics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "$ref": "#/paths/~1tasks/put/requestBody/content/application~1json/schema/properties/epicId",
                        "description": "The unique identifier for the epic"
                      },
                      "title": {
                        "type": "string",
                        "description": "The title of the epic"
                      },
                      "description": {
                        "type": "string",
                        "description": "The epic description"
                      },
                      "ownerId": {
                        "$ref": "#/paths/~1epics/get/parameters/1/schema",
                        "description": "The ID of the user who owns the epic"
                      },
                      "projectId": {
                        "$ref": "#/paths/~1epics/get/parameters/0/schema",
                        "description": "The ID of the project the epic belongs to"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time when the epic was created"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time when the epic was last updated"
                      }
                    },
                    "required": [
                      "id",
                      "title",
                      "projectId",
                      "createdAt",
                      "updatedAt"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Epics"
        ],
        "summary": "Create a new epic",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the epic"
                  },
                  "description": {
                    "type": "string",
                    "description": "The epic description"
                  },
                  "projectId": {
                    "$ref": "#/paths/~1epics/get/parameters/0/schema",
                    "description": "The ID of the project which the epic belongs to"
                  }
                },
                "required": [
                  "title",
                  "projectId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Epic created"
          }
        }
      }
    },
    "/stories": {
      "get": {
        "tags": [
          "Stories"
        ],
        "summary": "Get a list of stories",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/paths/~1epics/get/parameters/0/schema",
              "description": "The ID of the project to filter by"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/paths/~1epics/get/parameters/1/schema",
              "description": "The ID of the user who owns the story"
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/paths/~1epics/get/parameters/2/schema",
              "description": "The ID of the group which the story belongs to"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of stories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "description": "The story details",
                    "type": "object",
                    "properties": {
                      "id": {
                        "$ref": "#/paths/~1epics/get/parameters/2/schema",
                        "description": "The unique identifier for the story"
                      },
                      "title": {
                        "type": "string",
                        "description": "The title of the story"
                      },
                      "description": {
                        "type": "string",
                        "description": "The story description"
                      },
                      "projectId": {
                        "$ref": "#/paths/~1epics/get/parameters/0/schema",
                        "description": "The ID of the project the story belongs to"
                      },
                      "epicId": {
                        "$ref": "#/paths/~1tasks/put/requestBody/content/application~1json/schema/properties/epicId",
                        "description": "The ID of the epic the story belongs to"
                      },
                      "ownerId": {
                        "$ref": "#/paths/~1epics/get/parameters/1/schema",
                        "description": "The ID of the user who owns the story"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time when the story was created"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time when the story was last updated"
                      }
                    },
                    "required": [
                      "id",
                      "title",
                      "projectId",
                      "ownerId",
                      "createdAt",
                      "updatedAt"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Stories"
        ],
        "summary": "Create a new story",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the story"
                  },
                  "description": {
                    "type": "string",
                    "description": "The story description"
                  },
                  "projectId": {
                    "$ref": "#/paths/~1epics/get/parameters/0/schema",
                    "description": "The ID of the project the story belongs to"
                  },
                  "epicId": {
                    "$ref": "#/paths/~1tasks/put/requestBody/content/application~1json/schema/properties/epicId",
                    "description": "The ID of the epic the story belongs to"
                  }
                },
                "required": [
                  "title",
                  "projectId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Story created"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get a list of tasks",
        "responses": {
          "200": {
            "description": "A list of tasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/paths/~1tasks/post/responses/201/content/application~1json/schema",
                    "description": "A task object"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Create a new task",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the task"
                  },
                  "description": {
                    "type": "string",
                    "description": "The task description"
                  },
                  "projectId": {
                    "$ref": "#/paths/~1epics/get/parameters/0/schema",
                    "description": "The project ID the task belongs to"
                  },
                  "storyId": {
                    "$ref": "#/paths/~1tasks/put/requestBody/content/application~1json/schema/properties/storyId",
                    "description": "The story ID the task belongs to"
                  },
                  "epicId": {
                    "$ref": "#/paths/~1tasks/put/requestBody/content/application~1json/schema/properties/epicId",
                    "description": "The epic ID the task belongs to"
                  },
                  "assigneeId": {
                    "$ref": "#/paths/~1epics/get/parameters/1/schema",
                    "description": "The user ID the task is assigned to"
                  },
                  "estimation": {
                    "type": "integer",
                    "description": "The estimated effort for the task"
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the task"
                  }
                },
                "required": [
                  "title",
                  "projectId",
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The created task object",
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/paths/~1epics/get/parameters/2/schema",
                      "description": "The unique identifier for the task"
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the task"
                    },
                    "description": {
                      "type": "string",
                      "description": "The task description"
                    },
                    "projectId": {
                      "$ref": "#/paths/~1epics/get/parameters/0/schema",
                      "description": "The ID of the project the task belongs to"
                    },
                    "storyId": {
                      "$ref": "#/paths/~1tasks/put/requestBody/content/application~1json/schema/properties/storyId",
                      "description": "The ID of the story the task belongs to"
                    },
                    "epicId": {
                      "$ref": "#/paths/~1tasks/put/requestBody/content/application~1json/schema/properties/epicId",
                      "description": "The ID of the epic the task belongs to"
                    },
                    "assigneeId": {
                      "$ref": "#/paths/~1epics/get/parameters/1/schema",
                      "description": "The ID of the user assigned to the task"
                    },
                    "estimation": {
                      "type": "number",
                      "description": "The estimated effort for the task"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the task"
                    }
                  },
                  "required": [
                    "title",
                    "projectId",
                    "status"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tasks"
        ],
        "summary": "Update a task by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The task ID",
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the task"
                  },
                  "description": {
                    "type": "string",
                    "description": "The task description"
                  },
                  "projectId": {
                    "$ref": "#/paths/~1epics/get/parameters/0/schema",
                    "description": "The project ID the task belongs to"
                  },
                  "storyId": {
                    "description": "The story ID the task belongs to",
                    "type": "number"
                  },
                  "epicId": {
                    "description": "The epic ID the task belongs to",
                    "type": "number"
                  },
                  "assigneeId": {
                    "$ref": "#/paths/~1epics/get/parameters/1/schema",
                    "description": "The user ID the task is assigned to"
                  },
                  "estimation": {
                    "type": "integer",
                    "description": "The estimated effort for the task"
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the task"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Task updated",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/paths/~1tasks/post/responses/201/content/application~1json/schema",
                    "description": "The updated task object"
                  }
                }
              }
            },
            "404": {
              "description": "Task not found"
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get a task by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/paths/~1tasks/put/parameters/0/schema",
              "description": "The task ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1tasks/post/responses/201/content/application~1json/schema",
                  "description": "The task object"
                }
              }
            }
          },
          "404": {
            "description": "Task not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Delete a task by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/paths/~1tasks/put/parameters/0/schema",
              "description": "The task ID"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Task deleted"
          },
          "404": {
            "description": "Task not found"
          }
        }
      }
    },
    "/taskwatchers": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Add a task watcher",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "taskId": {
                    "$ref": "#/paths/~1tasks/put/parameters/0/schema",
                    "description": "The ID of the task to watch"
                  },
                  "userId": {
                    "$ref": "#/paths/~1epics/get/parameters/1/schema",
                    "description": "The ID of the user who will be watching the task"
                  }
                },
                "required": [
                  "taskId",
                  "userId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task watcher added"
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Remove a task watcher",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "taskId": {
                    "$ref": "#/paths/~1tasks/put/parameters/0/schema",
                    "description": "The ID of the task"
                  },
                  "userId": {
                    "$ref": "#/paths/~1epics/get/parameters/1/schema",
                    "description": "The ID of the user"
                  }
                },
                "required": [
                  "taskId",
                  "userId"
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Task watcher removed"
          }
        }
      }
    }
  }
}
