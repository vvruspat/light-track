{
  "openapi": "3.0.1",
  "info": {
    "title": "LightTrack API",
    "description": "API for the LightTrack task-tracking system.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api"
    }
  ],
  "tags": [
    {
      "name": "Projects",
      "description": "API related to projects"
    },
    {
      "name": "Epics",
      "description": "API related to tasks"
    },
    {
      "name": "Stories",
      "description": "API related to tasks"
    },
    {
      "name": "Tasks",
      "description": "API related to tasks"
    }
  ],
  "paths": {
    "/projects": {
      "get": {
        "tags": ["Projects"],
        "summary": "Get a list of projects",
        "parameters": [
          {
            "name": "group_id",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the group to filter by",
              "type": "number"
            }
          },
          {
            "name": "owner_id",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the user who owns the project",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number",
              "description": "Number of items to return",
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "number",
              "description": "Number of items to skip",
              "default": 0
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field to sort by"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The direction to sort by",
              "default": "asc",
              "type": "string",
              "enum": ["asc", "desc"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of projects",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The list of projects",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "The unique identifier for the project",
                                "type": "number"
                              },
                              "title": {
                                "type": "string",
                                "description": "The title of the project"
                              },
                              "description": {
                                "type": "string",
                                "description": "The project description"
                              },
                              "owner_id": {
                                "description": "The ID of the project owner",
                                "type": "string"
                              },
                              "group_id": {
                                "description": "The ID of the group the project belongs to",
                                "type": "number"
                              },
                              "created_at": {
                                "type": "string",
                                "description": "The date and time the project was created"
                              }
                            },
                            "required": ["title", "group_id"]
                          }
                        ],
                        "required": [
                          "id",
                          "title",
                          "created_at",
                          "group_id",
                          "owner_id",
                          "description"
                        ]
                      }
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Projects"],
        "summary": "Create a new project",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the project"
                  },
                  "description": {
                    "type": "string",
                    "description": "The project description"
                  },
                  "group_id": {
                    "description": "The ID of the group the project belongs to",
                    "type": "number"
                  }
                },
                "required": ["title", "group_id"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "number"
                        },
                        "statusMessage": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The unique identifier for the project",
                              "type": "number"
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the project"
                            },
                            "description": {
                              "type": "string",
                              "description": "The project description"
                            },
                            "owner_id": {
                              "description": "The ID of the project owner",
                              "type": "string"
                            },
                            "group_id": {
                              "description": "The ID of the group the project belongs to",
                              "type": "number"
                            },
                            "created_at": {
                              "type": "string",
                              "description": "The date and time the project was created"
                            }
                          },
                          "required": [
                            "id",
                            "title",
                            "created_at",
                            "group_id",
                            "owner_id",
                            "description"
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{id}": {
      "get": {
        "tags": ["Projects"],
        "summary": "Get a project by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The ID of the project",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project details",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "number"
                        },
                        "statusMessage": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "The unique identifier for the project",
                                  "type": "number"
                                },
                                "title": {
                                  "type": "string",
                                  "description": "The title of the project"
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The project description"
                                },
                                "owner_id": {
                                  "description": "The ID of the project owner",
                                  "type": "string"
                                },
                                "group_id": {
                                  "description": "The ID of the group the project belongs to",
                                  "type": "number"
                                },
                                "created_at": {
                                  "type": "string",
                                  "description": "The date and time the project was created"
                                }
                              },
                              "required": ["title", "group_id"]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "epics": {
                                  "type": "array",
                                  "items": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "description": "The unique identifier for the epic",
                                            "type": "number"
                                          },
                                          "title": {
                                            "type": "string",
                                            "description": "The title of the epic"
                                          },
                                          "description": {
                                            "type": "string",
                                            "description": "The epic description"
                                          },
                                          "owner_id": {
                                            "description": "The ID of the user who owns the epic",
                                            "type": "string"
                                          },
                                          "project_id": {
                                            "description": "The ID of the project the epic belongs to",
                                            "type": "number"
                                          },
                                          "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "The date and time when the epic was created"
                                          },
                                          "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "The date and time when the epic was last updated"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "title",
                                          "project_id",
                                          "created_at",
                                          "updated_at"
                                        ]
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "stories": {
                                            "type": "array",
                                            "items": {
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "id": {
                                                      "description": "The unique identifier for the story",
                                                      "type": "number"
                                                    },
                                                    "title": {
                                                      "type": "string",
                                                      "description": "The title of the story"
                                                    },
                                                    "description": {
                                                      "type": "string",
                                                      "description": "The story description"
                                                    },
                                                    "epic_id": {
                                                      "description": "The ID of the epic the story belongs to",
                                                      "type": "number"
                                                    },
                                                    "owner_id": {
                                                      "description": "The ID of the user who owns the story",
                                                      "type": "string"
                                                    },
                                                    "created_at": {
                                                      "type": "string",
                                                      "format": "date-time",
                                                      "description": "The date and time when the story was created"
                                                    },
                                                    "updated_at": {
                                                      "type": "string",
                                                      "format": "date-time",
                                                      "description": "The date and time when the story was last updated"
                                                    }
                                                  },
                                                  "required": [
                                                    "id",
                                                    "title",
                                                    "owner_id",
                                                    "created_at",
                                                    "updated_at"
                                                  ]
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "tasks": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "id": {
                                                            "description": "The unique identifier for the task",
                                                            "type": "number"
                                                          },
                                                          "title": {
                                                            "type": "string",
                                                            "description": "The title of the task"
                                                          },
                                                          "description": {
                                                            "type": "string",
                                                            "description": "The task description"
                                                          },
                                                          "story_id": {
                                                            "description": "The ID of the story the task belongs to",
                                                            "type": "number"
                                                          },
                                                          "assignee_id": {
                                                            "description": "The ID of the user assigned to the task",
                                                            "type": "string"
                                                          },
                                                          "estimation": {
                                                            "type": "number",
                                                            "description": "The estimated effort for the task"
                                                          },
                                                          "status": {
                                                            "type": "string",
                                                            "description": "The status of the task"
                                                          }
                                                        },
                                                        "required": [
                                                          "id",
                                                          "title",
                                                          "description",
                                                          "owner_id",
                                                          "story_id",
                                                          "created_at",
                                                          "updated_at",
                                                          "estimation",
                                                          "status",
                                                          "assignee_id"
                                                        ]
                                                      }
                                                    }
                                                  }
                                                }
                                              ],
                                              "required": [
                                                "id",
                                                "title",
                                                "description",
                                                "owner_id",
                                                "epic_id",
                                                "created_at",
                                                "updated_at",
                                                "tasks"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    ],
                                    "required": [
                                      "id",
                                      "title",
                                      "description",
                                      "project_id",
                                      "created_at",
                                      "updated_at",
                                      "stories",
                                      "owner_id"
                                    ]
                                  }
                                }
                              }
                            }
                          ],
                          "required": [
                            "id",
                            "title",
                            "created_at",
                            "group_id",
                            "owner_id",
                            "description",
                            "epics"
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Projects"],
        "summary": "Delete project by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The ID of the project",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project deleted",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "number"
                        },
                        "statusMessage": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Projects"],
        "summary": "Update project by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The ID of the project",
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the project"
                  },
                  "description": {
                    "type": "string",
                    "description": "The project description"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project updated",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "number"
                        },
                        "statusMessage": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The unique identifier for the project",
                              "type": "number"
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the project"
                            },
                            "description": {
                              "type": "string",
                              "description": "The project description"
                            },
                            "owner_id": {
                              "description": "The ID of the project owner",
                              "type": "string"
                            },
                            "group_id": {
                              "description": "The ID of the group the project belongs to",
                              "type": "number"
                            },
                            "created_at": {
                              "type": "string",
                              "description": "The date and time the project was created"
                            }
                          },
                          "required": [
                            "id",
                            "title",
                            "created_at",
                            "group_id",
                            "owner_id",
                            "description"
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/epics": {
      "get": {
        "tags": ["Epics"],
        "summary": "Get a list of epics",
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the project to filter by",
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number",
              "description": "Number of items to return",
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "number",
              "description": "Number of items to skip",
              "default": 0
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field to sort by"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The direction to sort by",
              "default": "asc",
              "type": "string",
              "enum": ["asc", "desc"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of epics",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Epic",
                        "description": "The epic details"
                      }
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Epics"],
        "summary": "Create a new epic",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the epic"
                  },
                  "description": {
                    "type": "string",
                    "description": "The epic description"
                  },
                  "project_id": {
                    "description": "The ID of the project which the epic belongs to",
                    "type": "number"
                  }
                },
                "required": ["title", "project_id"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Epic created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "number"
                        },
                        "statusMessage": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The unique identifier for the epic",
                              "type": "number"
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the epic"
                            },
                            "description": {
                              "type": "string",
                              "description": "The epic description"
                            },
                            "owner_id": {
                              "description": "The ID of the user who owns the epic",
                              "type": "string"
                            },
                            "project_id": {
                              "description": "The ID of the project the epic belongs to",
                              "type": "number"
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date and time when the epic was created"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date and time when the epic was last updated"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/epics/{id}": {
      "get": {
        "tags": ["Epics"],
        "summary": "Get an epic by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The ID of the epic to retrieve",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Epic details",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "number"
                        },
                        "statusMessage": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The unique identifier for the epic",
                              "type": "number"
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the epic"
                            },
                            "description": {
                              "type": "string",
                              "description": "The epic description"
                            },
                            "owner_id": {
                              "description": "The ID of the user who owns the epic",
                              "type": "string"
                            },
                            "project_id": {
                              "description": "The ID of the project the epic belongs to",
                              "type": "number"
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date and time when the epic was created"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date and time when the epic was last updated"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Epics"],
        "summary": "Delete an epic by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The ID of the epic to retrieve",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Epic deleted",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "number"
                        },
                        "statusMessage": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Epics"],
        "summary": "Update epic by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The ID of the epic to update",
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the epic"
                  },
                  "description": {
                    "type": "string",
                    "description": "The epic description"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Epic updated",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "number"
                        },
                        "statusMessage": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The unique identifier for the epic",
                              "type": "number"
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the epic"
                            },
                            "description": {
                              "type": "string",
                              "description": "The epic description"
                            },
                            "owner_id": {
                              "description": "The ID of the user who owns the epic",
                              "type": "string"
                            },
                            "project_id": {
                              "description": "The ID of the project the epic belongs to",
                              "type": "number"
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date and time when the epic was created"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date and time when the epic was last updated"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stories": {
      "get": {
        "tags": ["Stories"],
        "summary": "Get a list of stories",
        "parameters": [
          {
            "name": "epic_id",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the epic to filter by",
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number",
              "description": "Number of items to return",
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "number",
              "description": "Number of items to skip",
              "default": 0
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field to sort by"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The direction to sort by",
              "default": "asc",
              "type": "string",
              "enum": ["asc", "desc"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of stories successfully returned",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The list of stories",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Story",
                        "description": "The story details"
                      }
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Stories"],
        "summary": "Create a new story",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the story"
                  },
                  "description": {
                    "type": "string",
                    "description": "The story description"
                  },
                  "epic_id": {
                    "description": "The ID of the epic the story belongs to",
                    "type": "number"
                  }
                },
                "required": ["title"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Story created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "number"
                        },
                        "statusMessage": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The unique identifier for the story",
                              "type": "number"
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the story"
                            },
                            "description": {
                              "type": "string",
                              "description": "The story description"
                            },
                            "epic_id": {
                              "description": "The ID of the epic the story belongs to",
                              "type": "number"
                            },
                            "owner_id": {
                              "description": "The ID of the user who owns the story",
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date and time when the story was created"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date and time when the story was last updated"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stories/{id}": {
      "get": {
        "tags": ["Stories"],
        "summary": "Get an story by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The ID of the story",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Story details",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "number"
                        },
                        "statusMessage": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The unique identifier for the story",
                              "type": "number"
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the story"
                            },
                            "description": {
                              "type": "string",
                              "description": "The story description"
                            },
                            "epic_id": {
                              "description": "The ID of the epic the story belongs to",
                              "type": "number"
                            },
                            "owner_id": {
                              "description": "The ID of the user who owns the story",
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date and time when the story was created"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date and time when the story was last updated"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "story not found",
            "content": {
              "application/json": {
                "schema": {
                  "statusCode": {
                    "type": "number"
                  },
                  "statusMessage": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Stories"],
        "summary": "Delete story by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The ID of the story",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Story deleted",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "number"
                        },
                        "statusMessage": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "story not found",
            "content": {
              "application/json": {
                "schema": {
                  "statusCode": {
                    "type": "number"
                  },
                  "statusMessage": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Stories"],
        "summary": "Update story",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The ID of the story",
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the story"
                  },
                  "description": {
                    "type": "string",
                    "description": "The story description"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Story updated",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "number"
                        },
                        "statusMessage": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The unique identifier for the story",
                              "type": "number"
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the story"
                            },
                            "description": {
                              "type": "string",
                              "description": "The story description"
                            },
                            "epic_id": {
                              "description": "The ID of the epic the story belongs to",
                              "type": "number"
                            },
                            "owner_id": {
                              "description": "The ID of the user who owns the story",
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date and time when the story was created"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date and time when the story was last updated"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get a list of tasks",
        "parameters": [
          {
            "name": "story_id",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the story to filter by",
              "type": "number"
            }
          },
          {
            "name": "assignee_id",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the user the task is assigned to",
              "type": "string"
            }
          },
          {
            "name": "owner_id",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the user who owns the task",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number",
              "description": "Number of items to return",
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "number",
              "description": "Number of items to skip",
              "default": 0
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field to sort by"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The direction to sort by",
              "default": "asc",
              "type": "string",
              "enum": ["asc", "desc"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of tasks",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The list of tasks",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Task",
                        "description": "The task details"
                      }
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Tasks"],
        "summary": "Create a new task",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the task"
                  },
                  "description": {
                    "type": "string",
                    "description": "The task description"
                  },
                  "story_id": {
                    "description": "The story ID the task belongs to",
                    "type": "number"
                  },
                  "assignee_id": {
                    "description": "The user ID the task is assigned to",
                    "type": "string"
                  },
                  "estimation": {
                    "type": "number",
                    "description": "The estimated effort for the task"
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the task"
                  }
                },
                "required": ["title", "status"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "number"
                        },
                        "statusMessage": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The unique identifier for the task",
                              "type": "number"
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the task"
                            },
                            "description": {
                              "type": "string",
                              "description": "The task description"
                            },
                            "story_id": {
                              "description": "The ID of the story the task belongs to",
                              "type": "number"
                            },
                            "assignee_id": {
                              "description": "The ID of the user assigned to the task",
                              "type": "string"
                            },
                            "estimation": {
                              "type": "number",
                              "description": "The estimated effort for the task"
                            },
                            "status": {
                              "type": "string",
                              "description": "The status of the task"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get a task by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The task ID",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task details",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "number"
                        },
                        "statusMessage": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The unique identifier for the task",
                              "type": "number"
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the task"
                            },
                            "description": {
                              "type": "string",
                              "description": "The task description"
                            },
                            "story_id": {
                              "description": "The ID of the story the task belongs to",
                              "type": "number"
                            },
                            "assignee_id": {
                              "description": "The ID of the user assigned to the task",
                              "type": "string"
                            },
                            "estimation": {
                              "type": "number",
                              "description": "The estimated effort for the task"
                            },
                            "status": {
                              "type": "string",
                              "description": "The status of the task"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete a task by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The task ID",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Tasks"],
        "summary": "Update task by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The task ID",
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the task"
                  },
                  "description": {
                    "type": "string",
                    "description": "The task description"
                  },
                  "assignee_id": {
                    "description": "The user ID the task is assigned to",
                    "type": "string"
                  },
                  "estimation": {
                    "type": "number",
                    "description": "The estimated effort for the task"
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the task"
                  }
                },
                "required": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "number"
                        },
                        "statusMessage": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The unique identifier for the task",
                              "type": "number"
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the task"
                            },
                            "description": {
                              "type": "string",
                              "description": "The task description"
                            },
                            "story_id": {
                              "description": "The ID of the story the task belongs to",
                              "type": "number"
                            },
                            "assignee_id": {
                              "description": "The ID of the user assigned to the task",
                              "type": "string"
                            },
                            "estimation": {
                              "type": "number",
                              "description": "The estimated effort for the task"
                            },
                            "status": {
                              "type": "string",
                              "description": "The status of the task"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/taskwatchers": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Add a task watcher",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "task_id": {
                    "description": "The ID of the task to watch",
                    "type": "number"
                  },
                  "userId": {
                    "description": "The ID of the user who will be watching the task",
                    "type": "string"
                  }
                },
                "required": ["task_id", "userId"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task watcher add",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task watcher not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Remove a task watcher",
        "parameters": [
          {
            "name": "task_id",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the the task to remove watcher from",
              "type": "number"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the user to be removed from the task watcher list",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task watcher deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task watcher not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProjectId": {
        "type": "number",
        "description": "The unique identifier for the project"
      },
      "UserId": {
        "type": "string",
        "description": "The unique identifier for the User"
      },
      "GroupId": {
        "type": "number",
        "description": "The unique identifier for the group"
      },
      "EpicId": {
        "type": "number",
        "description": "The unique identifier for the epic"
      },
      "StoryId": {
        "type": "number",
        "description": "The unique identifier for the story"
      },
      "TaskId": {
        "type": "number",
        "description": "The unique identifier for the task"
      },
      "SortDirection": {
        "type": "string",
        "enum": ["asc", "desc"]
      },
      "GenericResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number"
          },
          "statusMessage": {
            "type": "string"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GenericListRequest": {
        "type": "object",
        "properties": {
          "limit": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number",
              "description": "Number of items to return",
              "default": 50
            }
          },
          "offset": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "number",
              "description": "Number of items to skip",
              "default": 0
            }
          }
        }
      },
      "GenericSortRequest": {
        "type": "object",
        "properties": {
          "sort": {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field to sort by"
            }
          },
          "direction": {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The direction to sort by",
              "default": "asc",
              "type": "string",
              "enum": ["asc", "desc"]
            }
          }
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier for the project",
            "type": "number"
          },
          "title": {
            "type": "string",
            "description": "The title of the project"
          },
          "description": {
            "type": "string",
            "description": "The project description"
          },
          "owner_id": {
            "description": "The ID of the project owner",
            "type": "string"
          },
          "group_id": {
            "description": "The ID of the group the project belongs to",
            "type": "number"
          },
          "created_at": {
            "type": "string",
            "description": "The date and time the project was created"
          }
        },
        "required": ["title", "group_id"]
      },
      "Epic": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier for the epic",
            "type": "number"
          },
          "title": {
            "type": "string",
            "description": "The title of the epic"
          },
          "description": {
            "type": "string",
            "description": "The epic description"
          },
          "owner_id": {
            "description": "The ID of the user who owns the epic",
            "type": "string"
          },
          "project_id": {
            "description": "The ID of the project the epic belongs to",
            "type": "number"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the epic was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the epic was last updated"
          }
        },
        "required": ["id", "title", "project_id", "created_at", "updated_at"]
      },
      "Story": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier for the story",
            "type": "number"
          },
          "title": {
            "type": "string",
            "description": "The title of the story"
          },
          "description": {
            "type": "string",
            "description": "The story description"
          },
          "epic_id": {
            "description": "The ID of the epic the story belongs to",
            "type": "number"
          },
          "owner_id": {
            "description": "The ID of the user who owns the story",
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the story was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the story was last updated"
          }
        },
        "required": ["id", "title", "owner_id", "created_at", "updated_at"]
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier for the task",
            "type": "number"
          },
          "title": {
            "type": "string",
            "description": "The title of the task"
          },
          "description": {
            "type": "string",
            "description": "The task description"
          },
          "story_id": {
            "description": "The ID of the story the task belongs to",
            "type": "number"
          },
          "assignee_id": {
            "description": "The ID of the user assigned to the task",
            "type": "string"
          },
          "estimation": {
            "type": "number",
            "description": "The estimated effort for the task"
          },
          "status": {
            "type": "string",
            "description": "The status of the task"
          }
        },
        "required": ["title", "project_id", "status"]
      },
      "FullProject": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "description": "The unique identifier for the project",
                "type": "number"
              },
              "title": {
                "type": "string",
                "description": "The title of the project"
              },
              "description": {
                "type": "string",
                "description": "The project description"
              },
              "owner_id": {
                "description": "The ID of the project owner",
                "type": "string"
              },
              "group_id": {
                "description": "The ID of the group the project belongs to",
                "type": "number"
              },
              "created_at": {
                "type": "string",
                "description": "The date and time the project was created"
              }
            },
            "required": ["title", "group_id"]
          },
          {
            "type": "object",
            "properties": {
              "epics": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The unique identifier for the epic",
                          "type": "number"
                        },
                        "title": {
                          "type": "string",
                          "description": "The title of the epic"
                        },
                        "description": {
                          "type": "string",
                          "description": "The epic description"
                        },
                        "owner_id": {
                          "description": "The ID of the user who owns the epic",
                          "type": "string"
                        },
                        "project_id": {
                          "description": "The ID of the project the epic belongs to",
                          "type": "number"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The date and time when the epic was created"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The date and time when the epic was last updated"
                        }
                      },
                      "required": [
                        "id",
                        "title",
                        "project_id",
                        "created_at",
                        "updated_at"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "stories": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The unique identifier for the story",
                                    "type": "number"
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "The title of the story"
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The story description"
                                  },
                                  "epic_id": {
                                    "description": "The ID of the epic the story belongs to",
                                    "type": "number"
                                  },
                                  "owner_id": {
                                    "description": "The ID of the user who owns the story",
                                    "type": "string"
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The date and time when the story was created"
                                  },
                                  "updated_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The date and time when the story was last updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "title",
                                  "owner_id",
                                  "created_at",
                                  "updated_at"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "tasks": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "The unique identifier for the task",
                                          "type": "number"
                                        },
                                        "title": {
                                          "type": "string",
                                          "description": "The title of the task"
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The task description"
                                        },
                                        "story_id": {
                                          "description": "The ID of the story the task belongs to",
                                          "type": "number"
                                        },
                                        "assignee_id": {
                                          "description": "The ID of the user assigned to the task",
                                          "type": "string"
                                        },
                                        "estimation": {
                                          "type": "number",
                                          "description": "The estimated effort for the task"
                                        },
                                        "status": {
                                          "type": "string",
                                          "description": "The status of the task"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "title",
                                        "description",
                                        "owner_id",
                                        "story_id",
                                        "created_at",
                                        "updated_at",
                                        "estimation",
                                        "status",
                                        "assignee_id"
                                      ]
                                    }
                                  }
                                }
                              }
                            ],
                            "required": [
                              "id",
                              "title",
                              "description",
                              "owner_id",
                              "epic_id",
                              "created_at",
                              "updated_at",
                              "tasks"
                            ]
                          }
                        }
                      }
                    }
                  ],
                  "required": [
                    "id",
                    "title",
                    "description",
                    "project_id",
                    "created_at",
                    "updated_at",
                    "stories",
                    "owner_id"
                  ]
                }
              }
            }
          }
        ],
        "required": [
          "id",
          "title",
          "created_at",
          "group_id",
          "owner_id",
          "description",
          "epics"
        ]
      },
      "FullEpic": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "description": "The unique identifier for the epic",
                "type": "number"
              },
              "title": {
                "type": "string",
                "description": "The title of the epic"
              },
              "description": {
                "type": "string",
                "description": "The epic description"
              },
              "owner_id": {
                "description": "The ID of the user who owns the epic",
                "type": "string"
              },
              "project_id": {
                "description": "The ID of the project the epic belongs to",
                "type": "number"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time when the epic was created"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time when the epic was last updated"
              }
            },
            "required": [
              "id",
              "title",
              "project_id",
              "created_at",
              "updated_at"
            ]
          },
          {
            "type": "object",
            "properties": {
              "stories": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The unique identifier for the story",
                          "type": "number"
                        },
                        "title": {
                          "type": "string",
                          "description": "The title of the story"
                        },
                        "description": {
                          "type": "string",
                          "description": "The story description"
                        },
                        "epic_id": {
                          "description": "The ID of the epic the story belongs to",
                          "type": "number"
                        },
                        "owner_id": {
                          "description": "The ID of the user who owns the story",
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The date and time when the story was created"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The date and time when the story was last updated"
                        }
                      },
                      "required": [
                        "id",
                        "title",
                        "owner_id",
                        "created_at",
                        "updated_at"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "tasks": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "The unique identifier for the task",
                                "type": "number"
                              },
                              "title": {
                                "type": "string",
                                "description": "The title of the task"
                              },
                              "description": {
                                "type": "string",
                                "description": "The task description"
                              },
                              "story_id": {
                                "description": "The ID of the story the task belongs to",
                                "type": "number"
                              },
                              "assignee_id": {
                                "description": "The ID of the user assigned to the task",
                                "type": "string"
                              },
                              "estimation": {
                                "type": "number",
                                "description": "The estimated effort for the task"
                              },
                              "status": {
                                "type": "string",
                                "description": "The status of the task"
                              }
                            },
                            "required": [
                              "id",
                              "title",
                              "description",
                              "owner_id",
                              "story_id",
                              "created_at",
                              "updated_at",
                              "estimation",
                              "status",
                              "assignee_id"
                            ]
                          }
                        }
                      }
                    }
                  ],
                  "required": [
                    "id",
                    "title",
                    "description",
                    "owner_id",
                    "epic_id",
                    "created_at",
                    "updated_at",
                    "tasks"
                  ]
                }
              }
            }
          }
        ],
        "required": [
          "id",
          "title",
          "description",
          "project_id",
          "created_at",
          "updated_at",
          "stories",
          "owner_id"
        ]
      },
      "FullStory": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "description": "The unique identifier for the story",
                "type": "number"
              },
              "title": {
                "type": "string",
                "description": "The title of the story"
              },
              "description": {
                "type": "string",
                "description": "The story description"
              },
              "epic_id": {
                "description": "The ID of the epic the story belongs to",
                "type": "number"
              },
              "owner_id": {
                "description": "The ID of the user who owns the story",
                "type": "string"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time when the story was created"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time when the story was last updated"
              }
            },
            "required": ["id", "title", "owner_id", "created_at", "updated_at"]
          },
          {
            "type": "object",
            "properties": {
              "tasks": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The unique identifier for the task",
                      "type": "number"
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the task"
                    },
                    "description": {
                      "type": "string",
                      "description": "The task description"
                    },
                    "story_id": {
                      "description": "The ID of the story the task belongs to",
                      "type": "number"
                    },
                    "assignee_id": {
                      "description": "The ID of the user assigned to the task",
                      "type": "string"
                    },
                    "estimation": {
                      "type": "number",
                      "description": "The estimated effort for the task"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the task"
                    }
                  },
                  "required": [
                    "id",
                    "title",
                    "description",
                    "owner_id",
                    "story_id",
                    "created_at",
                    "updated_at",
                    "estimation",
                    "status",
                    "assignee_id"
                  ]
                }
              }
            }
          }
        ],
        "required": [
          "id",
          "title",
          "description",
          "owner_id",
          "epic_id",
          "created_at",
          "updated_at",
          "tasks"
        ]
      },
      "FullTask": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier for the task",
            "type": "number"
          },
          "title": {
            "type": "string",
            "description": "The title of the task"
          },
          "description": {
            "type": "string",
            "description": "The task description"
          },
          "story_id": {
            "description": "The ID of the story the task belongs to",
            "type": "number"
          },
          "assignee_id": {
            "description": "The ID of the user assigned to the task",
            "type": "string"
          },
          "estimation": {
            "type": "number",
            "description": "The estimated effort for the task"
          },
          "status": {
            "type": "string",
            "description": "The status of the task"
          }
        },
        "required": [
          "id",
          "title",
          "description",
          "owner_id",
          "story_id",
          "created_at",
          "updated_at",
          "estimation",
          "status",
          "assignee_id"
        ]
      },
      "properties": {
        "statusCode": {
          "type": "number"
        },
        "statusMessage": {
          "type": "string"
        },
        "message": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "parameters": {
      "limit": {
        "name": "limit",
        "in": "query",
        "schema": {
          "type": "number",
          "description": "Number of items to return",
          "default": 50
        }
      },
      "offset": {
        "name": "offset",
        "in": "query",
        "schema": {
          "type": "number",
          "description": "Number of items to skip",
          "default": 0
        }
      },
      "sort": {
        "name": "sort",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "description": "The field to sort by"
        }
      },
      "direction": {
        "name": "direction",
        "in": "query",
        "required": false,
        "schema": {
          "description": "The direction to sort by",
          "default": "asc",
          "type": "string",
          "enum": ["asc", "desc"]
        }
      }
    }
  }
}
