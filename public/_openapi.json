{
  "openapi": "3.0.1",
  "info": {
    "title": "LightTrack API",
    "description": "API for the LightTrack task-tracking system.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api"
    }
  ],
  "tags": [
    {
      "name": "Projects",
      "description": "API related to projects"
    },
    {
      "name": "Epics",
      "description": "API related to tasks"
    },
    {
      "name": "Stories",
      "description": "API related to tasks"
    },
    {
      "name": "Tasks",
      "description": "API related to tasks"
    }
  ],
  "paths": {
    "/projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get a list of projects",
        "parameters": [
          {
            "name": "groupId",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the group to filter by",
              "type": "number"
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the user who owns the project",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Number of items to return",
              "default": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Number of items to skip",
              "default": 0
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field to sort by"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The direction to sort by",
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of projects",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The list of projects",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "description": "The project details",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "The unique identifier for the project",
                            "type": "number"
                          },
                          "title": {
                            "type": "string",
                            "description": "The title of the project"
                          },
                          "description": {
                            "type": "string",
                            "description": "The project description"
                          },
                          "ownerId": {
                            "description": "The ID of the project owner",
                            "type": "string"
                          },
                          "groupId": {
                            "description": "The ID of the group the project belongs to",
                            "type": "number"
                          }
                        },
                        "required": [
                          "title",
                          "groupId"
                        ]
                      }
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Create a new project",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the project"
                  },
                  "description": {
                    "type": "string",
                    "description": "The project description"
                  },
                  "groupId": {
                    "description": "The ID of the group the project belongs to",
                    "type": "number"
                  }
                },
                "required": [
                  "title",
                  "groupId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "number"
                        },
                        "statusMessage": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The unique identifier for the project",
                              "type": "number"
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the project"
                            },
                            "description": {
                              "type": "string",
                              "description": "The project description"
                            },
                            "ownerId": {
                              "description": "The ID of the project owner",
                              "type": "string"
                            },
                            "groupId": {
                              "description": "The ID of the group the project belongs to",
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{id}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get a project by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The ID of the project",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project details",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "number"
                        },
                        "statusMessage": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The unique identifier for the project",
                              "type": "number"
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the project"
                            },
                            "description": {
                              "type": "string",
                              "description": "The project description"
                            },
                            "ownerId": {
                              "description": "The ID of the project owner",
                              "type": "string"
                            },
                            "groupId": {
                              "description": "The ID of the group the project belongs to",
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/epics": {
      "get": {
        "tags": [
          "Epics"
        ],
        "summary": "Get a list of epics",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the project to filter by",
              "type": "number"
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the user who owns the epic",
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the group which the epic belongs to",
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Number of items to return",
              "default": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Number of items to skip",
              "default": 0
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field to sort by"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The direction to sort by",
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of epics",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Epic",
                        "description": "The epic details"
                      }
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Epics"
        ],
        "summary": "Create a new epic",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the epic"
                  },
                  "description": {
                    "type": "string",
                    "description": "The epic description"
                  },
                  "projectId": {
                    "description": "The ID of the project which the epic belongs to",
                    "type": "number"
                  }
                },
                "required": [
                  "title",
                  "projectId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Epic created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "number"
                        },
                        "statusMessage": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The unique identifier for the epic",
                              "type": "number"
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the epic"
                            },
                            "description": {
                              "type": "string",
                              "description": "The epic description"
                            },
                            "ownerId": {
                              "description": "The ID of the user who owns the epic",
                              "type": "string"
                            },
                            "projectId": {
                              "description": "The ID of the project the epic belongs to",
                              "type": "number"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date and time when the epic was created"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date and time when the epic was last updated"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stories": {
      "get": {
        "tags": [
          "Stories"
        ],
        "summary": "Get a list of stories",
        "parameters": [
          {
            "name": "groupId",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the group to filter by",
              "type": "number"
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the project to filter by",
              "type": "number"
            }
          },
          {
            "name": "epicId",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the epic to filter by",
              "type": "number"
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the user who owns the project",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Number of items to return",
              "default": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Number of items to skip",
              "default": 0
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field to sort by"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The direction to sort by",
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of stories successfully returned",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The list of stories",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Story",
                        "description": "The story details"
                      }
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Stories"
        ],
        "summary": "Create a new story",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the story"
                  },
                  "description": {
                    "type": "string",
                    "description": "The story description"
                  },
                  "projectId": {
                    "description": "The ID of the project the story belongs to",
                    "type": "number"
                  },
                  "epicId": {
                    "description": "The ID of the epic the story belongs to",
                    "type": "number"
                  }
                },
                "required": [
                  "title",
                  "projectId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Story created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "number"
                        },
                        "statusMessage": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The unique identifier for the story",
                              "type": "number"
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the story"
                            },
                            "description": {
                              "type": "string",
                              "description": "The story description"
                            },
                            "projectId": {
                              "description": "The ID of the project the story belongs to",
                              "type": "number"
                            },
                            "epicId": {
                              "description": "The ID of the epic the story belongs to",
                              "type": "number"
                            },
                            "ownerId": {
                              "description": "The ID of the user who owns the story",
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date and time when the story was created"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date and time when the story was last updated"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get a list of tasks",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the project to filter by",
              "type": "number"
            }
          },
          {
            "name": "storyId",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the story to filter by",
              "type": "number"
            }
          },
          {
            "name": "epicId",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the epic to filter by",
              "type": "number"
            }
          },
          {
            "name": "assigneeId",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the user the task is assigned to",
              "type": "string"
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the user who owns the task",
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of the group which the task belongs to",
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Number of items to return",
              "default": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Number of items to skip",
              "default": 0
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field to sort by"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The direction to sort by",
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of tasks",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The list of tasks",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Task",
                        "description": "The task details"
                      }
                    },
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Create a new task",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the task"
                  },
                  "description": {
                    "type": "string",
                    "description": "The task description"
                  },
                  "projectId": {
                    "description": "The project ID the task belongs to",
                    "type": "number"
                  },
                  "storyId": {
                    "description": "The story ID the task belongs to",
                    "type": "number"
                  },
                  "epicId": {
                    "description": "The epic ID the task belongs to",
                    "type": "number"
                  },
                  "assigneeId": {
                    "description": "The user ID the task is assigned to",
                    "type": "string"
                  },
                  "estimation": {
                    "type": "integer",
                    "description": "The estimated effort for the task"
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the task"
                  }
                },
                "required": [
                  "title",
                  "projectId",
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "number"
                        },
                        "statusMessage": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The unique identifier for the task",
                              "type": "number"
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the task"
                            },
                            "description": {
                              "type": "string",
                              "description": "The task description"
                            },
                            "projectId": {
                              "description": "The ID of the project the task belongs to",
                              "type": "number"
                            },
                            "storyId": {
                              "description": "The ID of the story the task belongs to",
                              "type": "number"
                            },
                            "epicId": {
                              "description": "The ID of the epic the task belongs to",
                              "type": "number"
                            },
                            "assigneeId": {
                              "description": "The ID of the user assigned to the task",
                              "type": "string"
                            },
                            "estimation": {
                              "type": "number",
                              "description": "The estimated effort for the task"
                            },
                            "status": {
                              "type": "string",
                              "description": "The status of the task"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get a task by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The task ID",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task details",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "number"
                        },
                        "statusMessage": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The unique identifier for the task",
                              "type": "number"
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the task"
                            },
                            "description": {
                              "type": "string",
                              "description": "The task description"
                            },
                            "projectId": {
                              "description": "The ID of the project the task belongs to",
                              "type": "number"
                            },
                            "storyId": {
                              "description": "The ID of the story the task belongs to",
                              "type": "number"
                            },
                            "epicId": {
                              "description": "The ID of the epic the task belongs to",
                              "type": "number"
                            },
                            "assigneeId": {
                              "description": "The ID of the user assigned to the task",
                              "type": "string"
                            },
                            "estimation": {
                              "type": "number",
                              "description": "The estimated effort for the task"
                            },
                            "status": {
                              "type": "string",
                              "description": "The status of the task"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tasks"
        ],
        "summary": "Update a task by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The task ID",
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the task"
                  },
                  "description": {
                    "type": "string",
                    "description": "The task description"
                  },
                  "projectId": {
                    "description": "The project ID the task belongs to",
                    "type": "number"
                  },
                  "storyId": {
                    "description": "The story ID the task belongs to",
                    "type": "number"
                  },
                  "epicId": {
                    "description": "The epic ID the task belongs to",
                    "type": "number"
                  },
                  "assigneeId": {
                    "description": "The user ID the task is assigned to",
                    "type": "string"
                  },
                  "estimation": {
                    "type": "integer",
                    "description": "The estimated effort for the task"
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the task"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "statusCode": {
                          "type": "number"
                        },
                        "statusMessage": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The unique identifier for the task",
                              "type": "number"
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the task"
                            },
                            "description": {
                              "type": "string",
                              "description": "The task description"
                            },
                            "projectId": {
                              "description": "The ID of the project the task belongs to",
                              "type": "number"
                            },
                            "storyId": {
                              "description": "The ID of the story the task belongs to",
                              "type": "number"
                            },
                            "epicId": {
                              "description": "The ID of the epic the task belongs to",
                              "type": "number"
                            },
                            "assigneeId": {
                              "description": "The ID of the user assigned to the task",
                              "type": "string"
                            },
                            "estimation": {
                              "type": "number",
                              "description": "The estimated effort for the task"
                            },
                            "status": {
                              "type": "string",
                              "description": "The status of the task"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Delete a task by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The task ID",
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Task deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/taskwatchers": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Add a task watcher",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "taskId": {
                    "description": "The ID of the task to watch",
                    "type": "number"
                  },
                  "userId": {
                    "description": "The ID of the user who will be watching the task",
                    "type": "string"
                  }
                },
                "required": [
                  "taskId",
                  "userId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task watcher add",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task watcher not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Remove a task watcher",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "taskId": {
                    "description": "The ID of the task to watch",
                    "type": "number"
                  },
                  "userId": {
                    "description": "The ID of the user who will be watching the task",
                    "type": "string"
                  }
                },
                "required": [
                  "taskId",
                  "userId"
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Task watcher deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task watcher not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number"
                    },
                    "statusMessage": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProjectId": {
        "type": "number",
        "description": "The unique identifier for the project"
      },
      "UserId": {
        "type": "string",
        "description": "The unique identifier for the User"
      },
      "GroupId": {
        "type": "number",
        "description": "The unique identifier for the group"
      },
      "EpicId": {
        "type": "number",
        "description": "The unique identifier for the epic"
      },
      "StoryId": {
        "type": "number",
        "description": "The unique identifier for the story"
      },
      "TaskId": {
        "type": "number",
        "description": "The unique identifier for the task"
      },
      "SortDirection": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ]
      },
      "GenericResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number"
          },
          "statusMessage": {
            "type": "string"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GenericListRequest": {
        "type": "object",
        "properties": {
          "limit": {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Number of items to return",
              "default": 10
            }
          },
          "offset": {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "Number of items to skip",
              "default": 0
            }
          }
        }
      },
      "GenericSortRequest": {
        "type": "object",
        "properties": {
          "sort": {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The field to sort by"
            }
          },
          "direction": {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The direction to sort by",
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier for the project",
            "type": "number"
          },
          "title": {
            "type": "string",
            "description": "The title of the project"
          },
          "description": {
            "type": "string",
            "description": "The project description"
          },
          "ownerId": {
            "description": "The ID of the project owner",
            "type": "string"
          },
          "groupId": {
            "description": "The ID of the group the project belongs to",
            "type": "number"
          }
        },
        "required": [
          "title",
          "groupId"
        ]
      },
      "Epic": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier for the epic",
            "type": "number"
          },
          "title": {
            "type": "string",
            "description": "The title of the epic"
          },
          "description": {
            "type": "string",
            "description": "The epic description"
          },
          "ownerId": {
            "description": "The ID of the user who owns the epic",
            "type": "string"
          },
          "projectId": {
            "description": "The ID of the project the epic belongs to",
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the epic was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the epic was last updated"
          }
        },
        "required": [
          "id",
          "title",
          "projectId",
          "createdAt",
          "updatedAt"
        ]
      },
      "Story": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier for the story",
            "type": "number"
          },
          "title": {
            "type": "string",
            "description": "The title of the story"
          },
          "description": {
            "type": "string",
            "description": "The story description"
          },
          "projectId": {
            "description": "The ID of the project the story belongs to",
            "type": "number"
          },
          "epicId": {
            "description": "The ID of the epic the story belongs to",
            "type": "number"
          },
          "ownerId": {
            "description": "The ID of the user who owns the story",
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the story was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the story was last updated"
          }
        },
        "required": [
          "id",
          "title",
          "projectId",
          "ownerId",
          "createdAt",
          "updatedAt"
        ]
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier for the task",
            "type": "number"
          },
          "title": {
            "type": "string",
            "description": "The title of the task"
          },
          "description": {
            "type": "string",
            "description": "The task description"
          },
          "projectId": {
            "description": "The ID of the project the task belongs to",
            "type": "number"
          },
          "storyId": {
            "description": "The ID of the story the task belongs to",
            "type": "number"
          },
          "epicId": {
            "description": "The ID of the epic the task belongs to",
            "type": "number"
          },
          "assigneeId": {
            "description": "The ID of the user assigned to the task",
            "type": "string"
          },
          "estimation": {
            "type": "number",
            "description": "The estimated effort for the task"
          },
          "status": {
            "type": "string",
            "description": "The status of the task"
          }
        },
        "required": [
          "title",
          "projectId",
          "status"
        ]
      }
    },
    "parameters": {
      "limit": {
        "name": "limit",
        "in": "query",
        "schema": {
          "type": "integer",
          "description": "Number of items to return",
          "default": 10
        }
      },
      "offset": {
        "name": "offset",
        "in": "query",
        "schema": {
          "type": "integer",
          "description": "Number of items to skip",
          "default": 0
        }
      },
      "sort": {
        "name": "sort",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "description": "The field to sort by"
        }
      },
      "direction": {
        "name": "direction",
        "in": "query",
        "required": false,
        "schema": {
          "description": "The direction to sort by",
          "default": "asc",
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ]
        }
      }
    }
  }
}